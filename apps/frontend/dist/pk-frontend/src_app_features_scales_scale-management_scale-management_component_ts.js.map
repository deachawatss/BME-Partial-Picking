{"version":3,"file":"src_app_features_scales_scale-management_scale-management_component_ts.js","mappings":"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","sources":["./src/app/features/scales/scale-management/scale-management.component.ts"],"sourcesContent":["import { Component, OnInit, signal, computed } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\ninterface WeightScale {\n  id: string;\n  name: string;\n  serialNumber: string;\n  comPort: string;\n  status: 'connected' | 'disconnected' | 'error' | 'calibrating';\n  capacity: number;\n  precision: number;\n  lastWeight: number;\n  lastUpdated: Date;\n  workstationId?: string;\n  firmwareVersion?: string;\n  batteryLevel?: number;\n}\n\ninterface ScaleCalibration {\n  scaleId: string;\n  calibrationWeight: number;\n  actualReading: number;\n  variance: number;\n  timestamp: Date;\n}\n\n@Component({\n  selector: 'app-scale-management',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  template: `\n    <div class=\"container mx-auto px-4 py-6\">\n      <!-- Header -->\n      <div class=\"mb-6\">\n        <h1 class=\"text-2xl font-bold text-foreground mb-2\">Scale Management</h1>\n        <p class=\"text-muted-foreground\">Manage and monitor weight scales across all workstations</p>\n      </div>\n\n      <!-- Action Bar -->\n      <div class=\"nwfth-card mb-6 p-4\">\n        <div class=\"flex flex-wrap items-center justify-between gap-4\">\n          <div class=\"flex items-center gap-4\">\n            <button\n              class=\"nwfth-button-primary\"\n              (click)=\"scanForScales()\"\n              [disabled]=\"isScanning()\"\n            >\n              <svg class=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"></path>\n              </svg>\n              {{ isScanning() ? 'Scanning...' : 'Scan for Scales' }}\n            </button>\n\n            <button\n              class=\"nwfth-button-secondary\"\n              (click)=\"refreshScales()\"\n              [disabled]=\"isRefreshing()\"\n            >\n              <svg class=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"></path>\n              </svg>\n              {{ isRefreshing() ? 'Refreshing...' : 'Refresh All' }}\n            </button>\n          </div>\n\n          <!-- Status Filter -->\n          <div class=\"flex items-center gap-2\">\n            <label class=\"text-sm font-medium text-foreground\">Filter:</label>\n            <select\n              class=\"nwfth-input w-32\"\n              [(ngModel)]=\"selectedStatusFilter\"\n              (ngModelChange)=\"updateStatusFilter($event)\"\n            >\n              <option value=\"all\">All Scales</option>\n              <option value=\"connected\">Connected</option>\n              <option value=\"disconnected\">Disconnected</option>\n              <option value=\"error\">Error</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      <!-- Scales Overview Cards -->\n      <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4 mb-6\">\n        <div class=\"nwfth-card p-4 text-center\">\n          <div class=\"text-2xl font-bold text-primary\">{{ totalScales() }}</div>\n          <div class=\"text-sm text-muted-foreground\">Total Scales</div>\n        </div>\n\n        <div class=\"nwfth-card p-4 text-center\">\n          <div class=\"text-2xl font-bold text-green-600\">{{ connectedScales() }}</div>\n          <div class=\"text-sm text-muted-foreground\">Connected</div>\n        </div>\n\n        <div class=\"nwfth-card p-4 text-center\">\n          <div class=\"text-2xl font-bold text-red-600\">{{ disconnectedScales() }}</div>\n          <div class=\"text-sm text-muted-foreground\">Disconnected</div>\n        </div>\n\n        <div class=\"nwfth-card p-4 text-center\">\n          <div class=\"text-2xl font-bold text-yellow-600\">{{ errorScales() }}</div>\n          <div class=\"text-sm text-muted-foreground\">Errors</div>\n        </div>\n      </div>\n\n      <!-- Scales List -->\n      <div class=\"nwfth-card p-6\">\n        <h2 class=\"text-lg font-semibold text-foreground mb-4\">Registered Scales</h2>\n\n        <!-- Loading State -->\n        <div *ngIf=\"isLoading()\" class=\"text-center py-8\">\n          <div class=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary mx-auto mb-4\"></div>\n          <p class=\"text-muted-foreground\">Loading scales...</p>\n        </div>\n\n        <!-- Scales Table -->\n        <div *ngIf=\"!isLoading()\" class=\"overflow-x-auto\">\n          <table class=\"w-full\">\n            <thead>\n              <tr class=\"border-b border-border\">\n                <th class=\"text-left py-3 px-4 font-medium text-foreground\">Scale Details</th>\n                <th class=\"text-left py-3 px-4 font-medium text-foreground\">Connection</th>\n                <th class=\"text-left py-3 px-4 font-medium text-foreground\">Status</th>\n                <th class=\"text-left py-3 px-4 font-medium text-foreground\">Current Weight</th>\n                <th class=\"text-left py-3 px-4 font-medium text-foreground\">Last Updated</th>\n                <th class=\"text-left py-3 px-4 font-medium text-foreground\">Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr\n                *ngFor=\"let scale of filteredScales()\"\n                class=\"border-b border-border hover:bg-muted/50 transition-colors\"\n              >\n                <td class=\"py-4 px-4\">\n                  <div>\n                    <div class=\"font-medium text-foreground\">{{ scale.name }}</div>\n                    <div class=\"text-sm text-muted-foreground\">{{ scale.serialNumber }}</div>\n                    <div class=\"text-xs text-muted-foreground\">{{ scale.comPort }}</div>\n                  </div>\n                </td>\n\n                <td class=\"py-4 px-4\">\n                  <div class=\"flex items-center gap-2\">\n                    <div [class]=\"getStatusIndicatorClass(scale.status)\" class=\"w-3 h-3 rounded-full\"></div>\n                    <span class=\"text-sm\">{{ getStatusDisplayName(scale.status) }}</span>\n                  </div>\n                  <div *ngIf=\"scale.workstationId\" class=\"text-xs text-muted-foreground mt-1\">\n                    Station: {{ scale.workstationId }}\n                  </div>\n                </td>\n\n                <td class=\"py-4 px-4\">\n                  <div class=\"text-sm\">\n                    <div>Capacity: {{ formatWeight(scale.capacity) }}</div>\n                    <div>Precision: ±{{ formatWeight(scale.precision) }}</div>\n                    <div *ngIf=\"scale.firmwareVersion\" class=\"text-xs text-muted-foreground\">\n                      FW: {{ scale.firmwareVersion }}\n                    </div>\n                  </div>\n                </td>\n\n                <td class=\"py-4 px-4\">\n                  <div class=\"text-lg font-mono\">{{ formatWeight(scale.lastWeight) }}</div>\n                  <div *ngIf=\"scale.batteryLevel !== undefined\" class=\"text-xs text-muted-foreground\">\n                    Battery: {{ scale.batteryLevel }}%\n                  </div>\n                </td>\n\n                <td class=\"py-4 px-4\">\n                  <div class=\"text-sm\">{{ formatDateTime(scale.lastUpdated) }}</div>\n                </td>\n\n                <td class=\"py-4 px-4\">\n                  <div class=\"flex flex-col gap-1\">\n                    <button\n                      class=\"nwfth-button-secondary text-xs px-2 py-1\"\n                      (click)=\"testScale(scale)\"\n                      [disabled]=\"scale.status === 'error'\"\n                    >\n                      Test\n                    </button>\n                    <button\n                      class=\"nwfth-button-secondary text-xs px-2 py-1\"\n                      (click)=\"calibrateScale(scale)\"\n                      [disabled]=\"scale.status !== 'connected'\"\n                    >\n                      Calibrate\n                    </button>\n                    <button\n                      class=\"nwfth-button-secondary text-xs px-2 py-1\"\n                      (click)=\"viewDetails(scale)\"\n                    >\n                      Details\n                    </button>\n                  </div>\n                </td>\n              </tr>\n\n              <!-- Empty State -->\n              <tr *ngIf=\"filteredScales().length === 0\">\n                <td colspan=\"6\" class=\"py-8 text-center\">\n                  <svg class=\"w-12 h-12 mx-auto text-muted-foreground mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"></path>\n                  </svg>\n                  <h3 class=\"text-lg font-medium text-foreground mb-2\">No scales found</h3>\n                  <p class=\"text-muted-foreground\">\n                    {{ selectedStatusFilter === 'all' ? 'No scales have been registered.' : 'No scales match the selected filter.' }}\n                  </p>\n                  <button\n                    class=\"nwfth-button-primary mt-4\"\n                    (click)=\"scanForScales()\"\n                  >\n                    Scan for Scales\n                  </button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      <!-- Scale Details Modal (placeholder) -->\n      <div *ngIf=\"selectedScale()\" class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n        <div class=\"nwfth-card max-w-2xl w-full max-h-96 overflow-y-auto\">\n          <div class=\"p-6\">\n            <div class=\"flex justify-between items-start mb-4\">\n              <h3 class=\"text-lg font-semibold text-foreground\">Scale Details</h3>\n              <button\n                class=\"text-muted-foreground hover:text-foreground\"\n                (click)=\"closeDetails()\"\n              >\n                <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\n                </svg>\n              </button>\n            </div>\n\n            <div class=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label class=\"text-sm font-medium text-foreground\">Name</label>\n                <p class=\"text-base\">{{ selectedScale()!.name }}</p>\n              </div>\n              <div>\n                <label class=\"text-sm font-medium text-foreground\">Serial Number</label>\n                <p class=\"text-base font-mono\">{{ selectedScale()!.serialNumber }}</p>\n              </div>\n              <div>\n                <label class=\"text-sm font-medium text-foreground\">COM Port</label>\n                <p class=\"text-base\">{{ selectedScale()!.comPort }}</p>\n              </div>\n              <div>\n                <label class=\"text-sm font-medium text-foreground\">Status</label>\n                <p [class]=\"getStatusClass(selectedScale()!.status)\">\n                  {{ getStatusDisplayName(selectedScale()!.status) }}\n                </p>\n              </div>\n            </div>\n\n            <div class=\"mt-6 flex justify-end gap-3\">\n              <button class=\"nwfth-button-secondary\" (click)=\"closeDetails()\">\n                Close\n              </button>\n              <button class=\"nwfth-button-primary\" (click)=\"editScale(selectedScale()!)\">\n                Edit Settings\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .modal-overlay {\n      backdrop-filter: blur(4px);\n    }\n  `]\n})\nexport class ScaleManagementComponent implements OnInit {\n  // Form inputs\n  public selectedStatusFilter = 'all';\n\n  // Signals for reactive state management\n  private _isLoading = signal<boolean>(false);\n  private _isScanning = signal<boolean>(false);\n  private _isRefreshing = signal<boolean>(false);\n  private _scales = signal<WeightScale[]>([]);\n  private _selectedScale = signal<WeightScale | null>(null);\n  private _statusFilter = signal<string>('all');\n\n  // Public readonly signals\n  public readonly isLoading = this._isLoading.asReadonly();\n  public readonly isScanning = this._isScanning.asReadonly();\n  public readonly isRefreshing = this._isRefreshing.asReadonly();\n  public readonly scales = this._scales.asReadonly();\n  public readonly selectedScale = this._selectedScale.asReadonly();\n\n  // Computed signals\n  public readonly totalScales = computed(() => this._scales().length);\n  public readonly connectedScales = computed(() =>\n    this._scales().filter(scale => scale.status === 'connected').length\n  );\n  public readonly disconnectedScales = computed(() =>\n    this._scales().filter(scale => scale.status === 'disconnected').length\n  );\n  public readonly errorScales = computed(() =>\n    this._scales().filter(scale => scale.status === 'error').length\n  );\n\n  public readonly filteredScales = computed(() => {\n    const filter = this._statusFilter();\n    const scales = this._scales();\n\n    if (filter === 'all') {\n      return scales;\n    }\n    return scales.filter(scale => scale.status === filter);\n  });\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.loadScales();\n  }\n\n  /**\n   * Load scales from the backend\n   */\n  loadScales(): void {\n    this._isLoading.set(true);\n\n    // Mock data for now - replace with actual API call\n    setTimeout(() => {\n      const mockScales: WeightScale[] = [\n        {\n          id: '1',\n          name: 'Scale WS-001',\n          serialNumber: 'SCL-2024-001',\n          comPort: 'COM3',\n          status: 'connected',\n          capacity: 50.0,\n          precision: 0.01,\n          lastWeight: 12.45,\n          lastUpdated: new Date(),\n          workstationId: 'WS-001',\n          firmwareVersion: '1.2.3',\n          batteryLevel: 85\n        },\n        {\n          id: '2',\n          name: 'Scale WS-002',\n          serialNumber: 'SCL-2024-002',\n          comPort: 'COM4',\n          status: 'connected',\n          capacity: 25.0,\n          precision: 0.01,\n          lastWeight: 0.00,\n          lastUpdated: new Date(Date.now() - 30000),\n          workstationId: 'WS-002',\n          firmwareVersion: '1.2.3',\n          batteryLevel: 92\n        },\n        {\n          id: '3',\n          name: 'Scale WS-003',\n          serialNumber: 'SCL-2024-003',\n          comPort: 'COM5',\n          status: 'disconnected',\n          capacity: 50.0,\n          precision: 0.01,\n          lastWeight: 0.00,\n          lastUpdated: new Date(Date.now() - 300000),\n          workstationId: 'WS-003'\n        },\n        {\n          id: '4',\n          name: 'Scale WS-004',\n          serialNumber: 'SCL-2024-004',\n          comPort: 'COM6',\n          status: 'error',\n          capacity: 25.0,\n          precision: 0.01,\n          lastWeight: 0.00,\n          lastUpdated: new Date(Date.now() - 600000),\n          workstationId: 'WS-004'\n        }\n      ];\n\n      this._scales.set(mockScales);\n      this._isLoading.set(false);\n    }, 1500);\n  }\n\n  /**\n   * Scan for new scales\n   */\n  scanForScales(): void {\n    this._isScanning.set(true);\n\n    // Mock scanning process\n    setTimeout(() => {\n      // Simulate finding new scales\n      console.log('Scanning for scales...');\n      this._isScanning.set(false);\n      this.loadScales();\n    }, 3000);\n  }\n\n  /**\n   * Refresh all scale statuses\n   */\n  refreshScales(): void {\n    this._isRefreshing.set(true);\n\n    // Mock refresh process\n    setTimeout(() => {\n      this.loadScales();\n      this._isRefreshing.set(false);\n    }, 2000);\n  }\n\n  /**\n   * Update status filter\n   */\n  updateStatusFilter(filter: string): void {\n    this._statusFilter.set(filter);\n  }\n\n  /**\n   * Test scale connection\n   */\n  testScale(scale: WeightScale): void {\n    console.log(`Testing scale ${scale.name}...`);\n    // Implement scale testing logic\n  }\n\n  /**\n   * Calibrate scale\n   */\n  calibrateScale(scale: WeightScale): void {\n    console.log(`Calibrating scale ${scale.name}...`);\n    // Update scale status temporarily\n    const scales = this._scales();\n    const scaleIndex = scales.findIndex(s => s.id === scale.id);\n    if (scaleIndex >= 0) {\n      scales[scaleIndex].status = 'calibrating';\n      this._scales.set([...scales]);\n\n      // Simulate calibration process\n      setTimeout(() => {\n        scales[scaleIndex].status = 'connected';\n        this._scales.set([...scales]);\n      }, 5000);\n    }\n  }\n\n  /**\n   * View scale details\n   */\n  viewDetails(scale: WeightScale): void {\n    this._selectedScale.set(scale);\n  }\n\n  /**\n   * Close details modal\n   */\n  closeDetails(): void {\n    this._selectedScale.set(null);\n  }\n\n  /**\n   * Edit scale settings\n   */\n  editScale(scale: WeightScale): void {\n    console.log(`Editing scale ${scale.name}...`);\n    // Implement scale editing logic\n    this.closeDetails();\n  }\n\n  // Helper methods\n  formatWeight(weight: number): string {\n    return `${weight.toFixed(2)} kg`;\n  }\n\n  formatDateTime(date: Date): string {\n    return date.toLocaleString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  }\n\n  getStatusDisplayName(status: string): string {\n    const statusMap: { [key: string]: string } = {\n      'connected': 'Connected',\n      'disconnected': 'Disconnected',\n      'error': 'Error',\n      'calibrating': 'Calibrating'\n    };\n    return statusMap[status] || status;\n  }\n\n  getStatusIndicatorClass(status: string): string {\n    const statusClasses: { [key: string]: string } = {\n      'connected': 'bg-green-500',\n      'disconnected': 'bg-gray-400',\n      'error': 'bg-red-500',\n      'calibrating': 'bg-yellow-500 animate-pulse'\n    };\n    return statusClasses[status] || 'bg-gray-400';\n  }\n\n  getStatusClass(status: string): string {\n    const statusClasses: { [key: string]: string } = {\n      'connected': 'text-green-600 font-medium',\n      'disconnected': 'text-gray-600',\n      'error': 'text-red-600 font-medium',\n      'calibrating': 'text-yellow-600 font-medium'\n    };\n    return statusClasses[status] || 'text-gray-600';\n  }\n}"],"names":["signal","computed","CommonModule","FormsModule","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","scale_r2","workstationId","firmwareVersion","batteryLevel","ɵɵtemplate","ScaleManagementComponent_div_54_tr_17_div_14_Template","ScaleManagementComponent_div_54_tr_17_div_21_Template","ScaleManagementComponent_div_54_tr_17_div_25_Template","ɵɵlistener","ScaleManagementComponent_div_54_tr_17_Template_button_click_31_listener","ɵɵrestoreView","_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","testScale","ScaleManagementComponent_div_54_tr_17_Template_button_click_33_listener","calibrateScale","ScaleManagementComponent_div_54_tr_17_Template_button_click_35_listener","viewDetails","ɵɵtextInterpolate","name","serialNumber","comPort","ɵɵclassMap","getStatusIndicatorClass","status","getStatusDisplayName","ɵɵproperty","formatWeight","capacity","precision","lastWeight","undefined","formatDateTime","lastUpdated","ScaleManagementComponent_div_54_tr_18_Template_button_click_8_listener","_r4","scanForScales","selectedStatusFilter","ScaleManagementComponent_div_54_tr_17_Template","ScaleManagementComponent_div_54_tr_18_Template","filteredScales","length","ScaleManagementComponent_div_55_Template_button_click_6_listener","_r5","closeDetails","ScaleManagementComponent_div_55_Template_button_click_31_listener","ScaleManagementComponent_div_55_Template_button_click_33_listener","editScale","selectedScale","getStatusClass","ScaleManagementComponent","constructor","_isLoading","ngDevMode","debugName","_isScanning","_isRefreshing","_scales","_selectedScale","_statusFilter","isLoading","asReadonly","isScanning","isRefreshing","scales","totalScales","connectedScales","filter","scale","disconnectedScales","errorScales","ngOnInit","loadScales","set","setTimeout","mockScales","id","Date","now","console","log","refreshScales","updateStatusFilter","scaleIndex","findIndex","s","weight","toFixed","date","toLocaleString","month","day","hour","minute","statusMap","statusClasses","_","_staticBlock","selectors","decls","vars","consts","template","ScaleManagementComponent_Template","rf","ctx","ScaleManagementComponent_Template_button_click_9_listener","ScaleManagementComponent_Template_button_click_13_listener","ɵɵtwoWayListener","ScaleManagementComponent_Template_select_ngModelChange_20_listener","$event","ɵɵtwoWayBindingSet","ScaleManagementComponent_div_53_Template","ScaleManagementComponent_div_54_Template","ScaleManagementComponent_div_55_Template","ɵɵtwoWayProperty","i1","NgForOf","NgIf","i2","NgSelectOption","ɵNgSelectMultipleOption","SelectControlValueAccessor","NgControlStatus","NgModel","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}