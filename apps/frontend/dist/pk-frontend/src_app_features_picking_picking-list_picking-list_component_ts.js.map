{"version":3,"file":"src_app_features_picking_picking-list_picking-list_component_ts.js","mappings":"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","sources":["./src/app/features/picking/picking-list/picking-list.component.ts"],"sourcesContent":["import { Component, OnInit, signal, computed } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CommonModule } from '@angular/common';\n\ninterface PartialRun {\n  id: string;\n  runNo: string;\n  description: string;\n  status: 'NEW' | 'IN_PROGRESS' | 'COMPLETED' | 'CANCELLED';\n  itemCount: number;\n  createdDate: string;\n  priority: 'LOW' | 'MEDIUM' | 'HIGH';\n}\n\n@Component({\n  selector: 'app-picking-list',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <div class=\"container mx-auto px-4 py-6\">\n      <!-- Header -->\n      <div class=\"mb-6\">\n        <h1 class=\"text-2xl font-bold text-foreground mb-2\">Partial Picking Runs</h1>\n        <p class=\"text-muted-foreground\">Select a partial picking run to begin picking operations</p>\n      </div>\n\n      <!-- Status Filter -->\n      <div class=\"nwfth-card mb-6 p-4\">\n        <h3 class=\"font-medium text-foreground mb-3\">Filter by Status</h3>\n        <div class=\"flex flex-wrap gap-2\">\n          @for (status of statusFilters(); track status) {\n            <button\n              [class]=\"getStatusFilterClass(status)\"\n              (click)=\"setStatusFilter(status)\"\n            >\n              {{ getStatusDisplayName(status) }}\n              <span class=\"ml-2 px-2 py-1 rounded-full text-xs bg-white/20\">\n                {{ getStatusCount(status) }}\n              </span>\n            </button>\n          }\n        </div>\n      </div>\n\n      <!-- Loading State -->\n      @if (isLoading()) {\n        <div class=\"flex justify-center py-8\">\n          <div class=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary\"></div>\n        </div>\n      }\n\n      <!-- Error State -->\n      @if (hasError()) {\n        <div class=\"nwfth-card mb-6 p-4 border-red-200 bg-red-50\">\n          <div class=\"flex items-center text-red-800\">\n            <svg class=\"w-5 h-5 mr-2\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\" clip-rule=\"evenodd\" />\n            </svg>\n            {{ errorMessage() }}\n          </div>\n          <button\n            class=\"nwfth-button-secondary mt-3\"\n            (click)=\"loadPickingRuns()\"\n          >\n            Retry\n          </button>\n        </div>\n      }\n\n      <!-- Picking Runs List -->\n      @if (!isLoading() && !hasError()) {\n        <div class=\"space-y-4\">\n          @for (run of filteredRuns(); track run.id) {\n            <div\n              class=\"nwfth-card p-6 cursor-pointer hover:shadow-medium transition-all\"\n              (click)=\"navigateToRun(run.id)\"\n            >\n          <div class=\"flex justify-between items-start mb-3\">\n            <div>\n              <h3 class=\"text-lg font-semibold text-foreground\">{{ run.runNo }}</h3>\n              <p class=\"text-muted-foreground mt-1\">{{ run.description }}</p>\n            </div>\n            <div class=\"flex items-center gap-2\">\n              <span [class]=\"getPriorityClass(run.priority)\">\n                {{ run.priority }}\n              </span>\n              <span [class]=\"getStatusClass(run.status)\">\n                {{ getStatusDisplayName(run.status) }}\n              </span>\n            </div>\n          </div>\n\n          <div class=\"flex justify-between items-center text-sm text-muted-foreground\">\n            <span>{{ run.itemCount }} items to pick</span>\n            <span>Created: {{ formatDate(run.createdDate) }}</span>\n          </div>\n\n          <div class=\"mt-3 pt-3 border-t border-border\">\n            <div class=\"flex justify-end\">\n              <button\n                class=\"nwfth-button-primary px-4 py-2\"\n                (click)=\"startPicking($event, run.id)\"\n              >\n                Start Picking\n              </button>\n            </div>\n          </div>\n        </div>\n\n          }\n\n          <!-- Empty State -->\n          @if (filteredRuns().length === 0) {\n            <div class=\"text-center py-8\">\n              <svg class=\"w-16 h-16 mx-auto text-muted-foreground mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2 2v-5m16 0h-2.586a1 1 0 00-.707.293l-2.414 2.414a1 1 0 01-.707.293h-2.172a1 1 0 01-.707-.293l-2.414-2.414A1 1 0 009.586 13H7\"></path>\n              </svg>\n              <h3 class=\"text-lg font-medium text-foreground mb-2\">No picking runs available</h3>\n              <p class=\"text-muted-foreground\">\n                {{ selectedStatusFilter() === 'ALL' ? 'There are no partial picking runs to display.' : 'No runs match the selected status filter.' }}\n              </p>\n            </div>\n          }\n        </div>\n      }\n    </div>\n  `,\n  styles: [`\n    .status-filter-active {\n      @apply nwfth-button-primary;\n    }\n    .status-filter-inactive {\n      @apply nwfth-button-secondary;\n    }\n  `]\n})\nexport class PickingListComponent implements OnInit {\n  // Signals for reactive state management\n  private _isLoading = signal<boolean>(false);\n  private _errorMessage = signal<string>('');\n  private _pickingRuns = signal<PartialRun[]>([]);\n  private _selectedStatusFilter = signal<string>('ALL');\n\n  // Public readonly signals\n  public readonly isLoading = this._isLoading.asReadonly();\n  public readonly errorMessage = this._errorMessage.asReadonly();\n  public readonly pickingRuns = this._pickingRuns.asReadonly();\n  public readonly selectedStatusFilter = this._selectedStatusFilter.asReadonly();\n\n  // Computed signals\n  public readonly hasError = computed(() => this._errorMessage().length > 0);\n  public readonly statusFilters = computed(() => ['ALL', 'NEW', 'IN_PROGRESS', 'COMPLETED']);\n\n  public readonly filteredRuns = computed(() => {\n    const filter = this._selectedStatusFilter();\n    const runs = this._pickingRuns();\n\n    if (filter === 'ALL') {\n      return runs.filter(run => run.status !== 'CANCELLED');\n    }\n    return runs.filter(run => run.status === filter);\n  });\n\n  constructor(private router: Router) {}\n\n  ngOnInit(): void {\n    this.loadPickingRuns();\n  }\n\n  /**\n   * Load picking runs from the backend\n   */\n  loadPickingRuns(): void {\n    this._isLoading.set(true);\n    this._errorMessage.set('');\n\n    // Mock data for now - replace with actual API call\n    setTimeout(() => {\n      const mockRuns: PartialRun[] = [\n        {\n          id: '1',\n          runNo: 'PR-2025-001',\n          description: 'Morning batch - High priority ingredients',\n          status: 'NEW',\n          itemCount: 12,\n          createdDate: '2025-01-15T08:00:00Z',\n          priority: 'HIGH'\n        },\n        {\n          id: '2',\n          runNo: 'PR-2025-002',\n          description: 'Afternoon production run',\n          status: 'NEW',\n          itemCount: 8,\n          createdDate: '2025-01-15T12:30:00Z',\n          priority: 'MEDIUM'\n        },\n        {\n          id: '3',\n          runNo: 'PR-2025-003',\n          description: 'Evening specialty items',\n          status: 'IN_PROGRESS',\n          itemCount: 5,\n          createdDate: '2025-01-15T16:00:00Z',\n          priority: 'LOW'\n        }\n      ];\n\n      this._pickingRuns.set(mockRuns);\n      this._isLoading.set(false);\n    }, 1000);\n  }\n\n  /**\n   * Set status filter\n   */\n  setStatusFilter(status: string): void {\n    this._selectedStatusFilter.set(status);\n  }\n\n  /**\n   * Get status filter button class\n   */\n  getStatusFilterClass(status: string): string {\n    return this._selectedStatusFilter() === status\n      ? 'status-filter-active'\n      : 'status-filter-inactive';\n  }\n\n  /**\n   * Get count for specific status\n   */\n  getStatusCount(status: string): number {\n    if (status === 'ALL') {\n      return this._pickingRuns().filter(run => run.status !== 'CANCELLED').length;\n    }\n    return this._pickingRuns().filter(run => run.status === status).length;\n  }\n\n  /**\n   * Navigate to picking run\n   */\n  navigateToRun(runId: string): void {\n    this.router.navigate(['/picking', runId]);\n  }\n\n  /**\n   * Start picking (prevent event bubbling)\n   */\n  startPicking(event: Event, runId: string): void {\n    event.stopPropagation();\n    this.navigateToRun(runId);\n  }\n\n  /**\n   * Get status display name\n   */\n  getStatusDisplayName(status: string): string {\n    const statusMap: { [key: string]: string } = {\n      'ALL': 'All Runs',\n      'NEW': 'New',\n      'IN_PROGRESS': 'In Progress',\n      'COMPLETED': 'Completed',\n      'CANCELLED': 'Cancelled'\n    };\n    return statusMap[status] || status;\n  }\n\n  /**\n   * Get status CSS class\n   */\n  getStatusClass(status: string): string {\n    const statusClasses: { [key: string]: string } = {\n      'NEW': 'px-2 py-1 rounded-full text-xs bg-blue-100 text-blue-800',\n      'IN_PROGRESS': 'px-2 py-1 rounded-full text-xs bg-yellow-100 text-yellow-800',\n      'COMPLETED': 'px-2 py-1 rounded-full text-xs bg-green-100 text-green-800',\n      'CANCELLED': 'px-2 py-1 rounded-full text-xs bg-red-100 text-red-800'\n    };\n    return statusClasses[status] || 'px-2 py-1 rounded-full text-xs bg-gray-100 text-gray-800';\n  }\n\n  /**\n   * Get priority CSS class\n   */\n  getPriorityClass(priority: string): string {\n    const priorityClasses: { [key: string]: string } = {\n      'HIGH': 'px-2 py-1 rounded-full text-xs bg-red-100 text-red-800 font-medium',\n      'MEDIUM': 'px-2 py-1 rounded-full text-xs bg-yellow-100 text-yellow-800',\n      'LOW': 'px-2 py-1 rounded-full text-xs bg-green-100 text-green-800'\n    };\n    return priorityClasses[priority] || 'px-2 py-1 rounded-full text-xs bg-gray-100 text-gray-800';\n  }\n\n  /**\n   * Format date for display\n   */\n  formatDate(dateString: string): string {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  }\n}"],"names":["signal","computed","CommonModule","i0","ɵɵdomElementStart","ɵɵdomListener","PickingListComponent_For_11_Template_button_click_0_listener","status_r2","ɵɵrestoreView","_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","setStatusFilter","ɵɵtext","ɵɵdomElementEnd","ɵɵclassMap","getStatusFilterClass","ɵɵadvance","ɵɵtextInterpolate1","getStatusDisplayName","getStatusCount","ɵɵdomElement","PickingListComponent_Conditional_13_Template_button_click_5_listener","_r4","loadPickingRuns","errorMessage","PickingListComponent_Conditional_14_For_2_Template_div_click_0_listener","run_r6","_r5","navigateToRun","id","PickingListComponent_Conditional_14_For_2_Template_button_click_19_listener","$event","startPicking","ɵɵtextInterpolate","runNo","description","getPriorityClass","priority","getStatusClass","status","itemCount","formatDate","createdDate","selectedStatusFilter","ɵɵrepeaterCreate","PickingListComponent_Conditional_14_For_2_Template","_forTrack0","ɵɵconditionalCreate","PickingListComponent_Conditional_14_Conditional_3_Template","ɵɵrepeater","filteredRuns","ɵɵconditional","length","PickingListComponent","constructor","router","_isLoading","ngDevMode","debugName","_errorMessage","_pickingRuns","_selectedStatusFilter","isLoading","asReadonly","pickingRuns","hasError","statusFilters","filter","runs","run","ngOnInit","set","setTimeout","mockRuns","runId","navigate","event","stopPropagation","statusMap","statusClasses","priorityClasses","dateString","date","Date","toLocaleDateString","month","day","hour","minute","_","_staticBlock","ɵɵdirectiveInject","i1","Router","selectors","decls","vars","consts","template","PickingListComponent_Template","rf","ctx","PickingListComponent_For_11_Template","ɵɵrepeaterTrackByIdentity","PickingListComponent_Conditional_12_Template","PickingListComponent_Conditional_13_Template","PickingListComponent_Conditional_14_Template","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}