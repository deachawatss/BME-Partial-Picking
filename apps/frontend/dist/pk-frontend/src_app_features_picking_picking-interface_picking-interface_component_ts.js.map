{"version":3,"file":"src_app_features_picking_picking-interface_picking-interface_component_ts.js","mappings":"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","sources":["./src/app/features/picking/picking-interface/picking-interface.component.ts"],"sourcesContent":["import { Component, OnInit, OnDestroy, signal, computed } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\ninterface PickingItem {\n  id: string;\n  itemCode: string;\n  itemName: string;\n  targetWeight: number;\n  actualWeight: number | null;\n  tolerance: {\n    min: number;\n    max: number;\n  };\n  status: 'PENDING' | 'PICKING' | 'COMPLETED' | 'OVER_TOLERANCE';\n  unit: string;\n  lotNumber?: string;\n  location?: string;\n}\n\ninterface WeightReading {\n  value: number;\n  timestamp: Date;\n  stable: boolean;\n}\n\ninterface PartialRun {\n  id: string;\n  runNo: string;\n  description: string;\n  items: PickingItem[];\n  status: 'NEW' | 'IN_PROGRESS' | 'COMPLETED';\n}\n\n@Component({\n  selector: 'app-picking-interface',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  template: `\n    <div class=\"min-h-screen bg-background\">\n      <!-- Header -->\n      <div class=\"bg-white border-b border-border shadow-sm\">\n        <div class=\"container mx-auto px-4 py-4\">\n          <div class=\"flex justify-between items-center\">\n            <div>\n              <h1 class=\"text-xl font-bold text-foreground\">{{ currentRun()?.runNo }}</h1>\n              <p class=\"text-muted-foreground\">{{ currentRun()?.description }}</p>\n            </div>\n            <div class=\"flex items-center gap-4\">\n              <!-- Connection Status -->\n              <div [class]=\"getConnectionStatusClass()\" class=\"px-3 py-2 rounded-lg flex items-center gap-2\">\n                <div [class]=\"getConnectionIndicatorClass()\" class=\"w-2 h-2 rounded-full\"></div>\n                <span class=\"text-sm font-medium\">{{ getConnectionStatusText() }}</span>\n              </div>\n              <button\n                class=\"nwfth-button-secondary\"\n                (click)=\"goBack()\"\n              >\n                Back to List\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"container mx-auto px-4 py-6\">\n        <!-- Progress Overview -->\n        <div class=\"nwfth-card mb-6 p-6\">\n          <div class=\"flex justify-between items-center mb-4\">\n            <h2 class=\"text-lg font-semibold text-foreground\">Progress Overview</h2>\n            <span class=\"text-sm text-muted-foreground\">\n              {{ completedItems().length }} of {{ totalItems() }} items completed\n            </span>\n          </div>\n\n          <div class=\"w-full bg-muted rounded-full h-3\">\n            <div\n              class=\"bg-primary h-3 rounded-full transition-all duration-300\"\n              [style.width.%]=\"progressPercentage()\"\n            ></div>\n          </div>\n        </div>\n\n        <!-- Weight Scale Interface -->\n        <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6\">\n          <!-- Current Weight Display -->\n          <div class=\"nwfth-card p-6\">\n            <h3 class=\"text-lg font-semibold text-foreground mb-4\">Current Weight</h3>\n\n            <div class=\"text-center\">\n              <div class=\"text-4xl font-bold text-primary mb-2\">\n                {{ formatWeight(currentWeight()) }}\n              </div>\n              <div class=\"text-sm text-muted-foreground mb-4\">\n                {{ isWeightStable() ? 'Stable' : 'Stabilizing...' }}\n              </div>\n\n              <!-- Weight Tolerance Indicator -->\n              <div *ngIf=\"currentPickingItem()\" class=\"mt-4\">\n                <div class=\"flex justify-between text-sm text-muted-foreground mb-2\">\n                  <span>Min: {{ formatWeight(currentPickingItem()!.tolerance.min) }}</span>\n                  <span>Target: {{ formatWeight(currentPickingItem()!.targetWeight) }}</span>\n                  <span>Max: {{ formatWeight(currentPickingItem()!.tolerance.max) }}</span>\n                </div>\n                <div class=\"w-full bg-gray-200 rounded-full h-2\">\n                  <div [class]=\"getToleranceBarClass()\"\n                       [style.width.%]=\"getTolerancePercentage()\"\n                       class=\"h-2 rounded-full transition-all duration-300\">\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Scale Controls -->\n          <div class=\"nwfth-card p-6\">\n            <h3 class=\"text-lg font-semibold text-foreground mb-4\">Scale Controls</h3>\n\n            <div class=\"space-y-3\">\n              <button\n                class=\"nwfth-button-secondary w-full\"\n                (click)=\"tareScale()\"\n                [disabled]=\"isScaleOperationInProgress()\"\n              >\n                Tare Scale\n              </button>\n\n              <button\n                class=\"nwfth-button-secondary w-full\"\n                (click)=\"calibrateScale()\"\n                [disabled]=\"isScaleOperationInProgress()\"\n              >\n                Calibrate\n              </button>\n\n              <button\n                [class]=\"isRecording() ? 'nwfth-button-primary w-full bg-red-600' : 'nwfth-button-primary w-full'\"\n                (click)=\"toggleRecording()\"\n                [disabled]=\"isScaleOperationInProgress()\"\n              >\n                {{ isRecording() ? 'Stop Recording' : 'Start Recording' }}\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <!-- Current Item Being Picked -->\n        <div *ngIf=\"currentPickingItem()\" class=\"nwfth-card mb-6 p-6 border-primary border-2\">\n          <h3 class=\"text-lg font-semibold text-foreground mb-4 flex items-center gap-2\">\n            <svg class=\"w-5 h-5 text-primary\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n            </svg>\n            Currently Picking\n          </h3>\n\n          <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div>\n              <label class=\"text-sm font-medium text-foreground\">Item Code</label>\n              <p class=\"text-lg font-mono\">{{ currentPickingItem()!.itemCode }}</p>\n            </div>\n\n            <div>\n              <label class=\"text-sm font-medium text-foreground\">Item Name</label>\n              <p class=\"text-base\">{{ currentPickingItem()!.itemName }}</p>\n            </div>\n\n            <div>\n              <label class=\"text-sm font-medium text-foreground\">Target Weight</label>\n              <p class=\"text-lg font-semibold text-primary\">\n                {{ formatWeight(currentPickingItem()!.targetWeight) }}\n              </p>\n            </div>\n          </div>\n\n          <div class=\"mt-6 flex justify-between items-center\">\n            <div class=\"flex items-center gap-4\">\n              <label class=\"text-sm font-medium text-foreground\">Lot Number:</label>\n              <input\n                type=\"text\"\n                class=\"nwfth-input w-32\"\n                [(ngModel)]=\"lotNumberInput\"\n                placeholder=\"LOT123\"\n              />\n            </div>\n\n            <div class=\"flex gap-3\">\n              <button\n                class=\"nwfth-button-secondary\"\n                (click)=\"skipCurrentItem()\"\n              >\n                Skip Item\n              </button>\n              <button\n                class=\"nwfth-button-primary\"\n                (click)=\"confirmWeight()\"\n                [disabled]=\"!canConfirmWeight()\"\n              >\n                Confirm Weight\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <!-- Items List -->\n        <div class=\"nwfth-card p-6\">\n          <h3 class=\"text-lg font-semibold text-foreground mb-4\">Picking Items</h3>\n\n          <div class=\"space-y-3\">\n            <div\n              *ngFor=\"let item of pickingItems(); let i = index\"\n              [class]=\"getItemRowClass(item)\"\n              class=\"p-4 rounded-lg border transition-all\"\n            >\n              <div class=\"grid grid-cols-1 md:grid-cols-5 gap-4 items-center\">\n                <div>\n                  <div class=\"font-mono text-sm\">{{ item.itemCode }}</div>\n                  <div class=\"text-xs text-muted-foreground\">{{ item.itemName }}</div>\n                </div>\n\n                <div class=\"text-center\">\n                  <div class=\"text-sm font-medium\">{{ formatWeight(item.targetWeight) }}</div>\n                  <div class=\"text-xs text-muted-foreground\">Target</div>\n                </div>\n\n                <div class=\"text-center\">\n                  <div class=\"text-sm font-medium\">\n                    {{ item.actualWeight !== null ? formatWeight(item.actualWeight) : '—' }}\n                  </div>\n                  <div class=\"text-xs text-muted-foreground\">Actual</div>\n                </div>\n\n                <div class=\"text-center\">\n                  <span [class]=\"getStatusClass(item.status)\">\n                    {{ getStatusDisplayName(item.status) }}\n                  </span>\n                </div>\n\n                <div class=\"text-center\">\n                  <button\n                    *ngIf=\"item.status === 'PENDING'\"\n                    class=\"nwfth-button-secondary px-3 py-1 text-xs\"\n                    (click)=\"startPickingItem(item)\"\n                  >\n                    Pick\n                  </button>\n                  <button\n                    *ngIf=\"item.status === 'COMPLETED'\"\n                    class=\"nwfth-button-secondary px-3 py-1 text-xs\"\n                    (click)=\"editItem(item)\"\n                  >\n                    Edit\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Completion Actions -->\n        <div *ngIf=\"isRunCompleted()\" class=\"nwfth-card mt-6 p-6 bg-green-50 border-green-200\">\n          <div class=\"text-center\">\n            <svg class=\"w-16 h-16 mx-auto text-green-500 mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n            </svg>\n            <h3 class=\"text-lg font-semibold text-green-800 mb-2\">Picking Run Completed!</h3>\n            <p class=\"text-green-700 mb-4\">All items have been successfully picked.</p>\n\n            <div class=\"flex justify-center gap-4\">\n              <button\n                class=\"nwfth-button-secondary\"\n                (click)=\"printLabels()\"\n              >\n                Print Labels\n              </button>\n              <button\n                class=\"nwfth-button-primary\"\n                (click)=\"finalizeRun()\"\n              >\n                Finalize Run\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .item-pending {\n      @apply border-gray-200 bg-white;\n    }\n    .item-picking {\n      @apply border-primary bg-blue-50;\n    }\n    .item-completed {\n      @apply border-green-200 bg-green-50;\n    }\n    .item-over-tolerance {\n      @apply border-red-200 bg-red-50;\n    }\n  `]\n})\nexport class PickingInterfaceComponent implements OnInit, OnDestroy {\n  // Route parameter\n  private runId: string = '';\n\n  // Form inputs\n  public lotNumberInput = '';\n\n  // Signals for reactive state management\n  private _isLoading = signal<boolean>(false);\n  private _currentRun = signal<PartialRun | null>(null);\n  private _currentWeight = signal<number>(0);\n  private _isWeightStable = signal<boolean>(false);\n  private _isRecording = signal<boolean>(false);\n  private _connectionStatus = signal<'connected' | 'disconnected' | 'connecting'>('connecting');\n  private _currentPickingItemId = signal<string | null>(null);\n  private _isScaleOperationInProgress = signal<boolean>(false);\n\n  // Public readonly signals\n  public readonly isLoading = this._isLoading.asReadonly();\n  public readonly currentRun = this._currentRun.asReadonly();\n  public readonly currentWeight = this._currentWeight.asReadonly();\n  public readonly isWeightStable = this._isWeightStable.asReadonly();\n  public readonly isRecording = this._isRecording.asReadonly();\n  public readonly connectionStatus = this._connectionStatus.asReadonly();\n  public readonly isScaleOperationInProgress = this._isScaleOperationInProgress.asReadonly();\n\n  // Computed signals\n  public readonly pickingItems = computed(() => this._currentRun()?.items || []);\n  public readonly totalItems = computed(() => this.pickingItems().length);\n  public readonly completedItems = computed(() =>\n    this.pickingItems().filter(item => item.status === 'COMPLETED')\n  );\n  public readonly progressPercentage = computed(() =>\n    this.totalItems() > 0 ? (this.completedItems().length / this.totalItems()) * 100 : 0\n  );\n  public readonly currentPickingItem = computed(() =>\n    this.pickingItems().find(item => item.id === this._currentPickingItemId())\n  );\n  public readonly isRunCompleted = computed(() =>\n    this.totalItems() > 0 && this.completedItems().length === this.totalItems()\n  );\n\n  // WebSocket connection for weight updates\n  private weightSocket?: WebSocket;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.runId = this.route.snapshot.paramMap.get('runId') || '';\n    this.loadPickingRun();\n    this.connectToWeightScale();\n  }\n\n  ngOnDestroy(): void {\n    if (this.weightSocket) {\n      this.weightSocket.close();\n    }\n  }\n\n  /**\n   * Load picking run data\n   */\n  loadPickingRun(): void {\n    this._isLoading.set(true);\n\n    // Mock data for now - replace with actual API call\n    setTimeout(() => {\n      const mockRun: PartialRun = {\n        id: this.runId,\n        runNo: `PR-2025-${this.runId.padStart(3, '0')}`,\n        description: 'Partial picking run for production batch',\n        status: 'IN_PROGRESS',\n        items: [\n          {\n            id: '1',\n            itemCode: 'ING-001',\n            itemName: 'Wheat Flour',\n            targetWeight: 25.50,\n            actualWeight: null,\n            tolerance: { min: 25.20, max: 25.80 },\n            status: 'PENDING',\n            unit: 'kg',\n            location: 'A1-01'\n          },\n          {\n            id: '2',\n            itemCode: 'ING-002',\n            itemName: 'Sugar',\n            targetWeight: 10.25,\n            actualWeight: null,\n            tolerance: { min: 10.10, max: 10.40 },\n            status: 'PENDING',\n            unit: 'kg',\n            location: 'B2-05'\n          },\n          {\n            id: '3',\n            itemCode: 'ING-003',\n            itemName: 'Salt',\n            targetWeight: 0.75,\n            actualWeight: null,\n            tolerance: { min: 0.70, max: 0.80 },\n            status: 'PENDING',\n            unit: 'kg',\n            location: 'C1-12'\n          }\n        ]\n      };\n\n      this._currentRun.set(mockRun);\n      this._isLoading.set(false);\n    }, 1000);\n  }\n\n  /**\n   * Connect to weight scale WebSocket\n   */\n  connectToWeightScale(): void {\n    this._connectionStatus.set('connecting');\n\n    // Mock WebSocket connection - replace with actual WebSocket\n    setTimeout(() => {\n      this._connectionStatus.set('connected');\n\n      // Simulate weight updates\n      setInterval(() => {\n        const baseWeight = 15.0;\n        const variation = (Math.random() - 0.5) * 2;\n        this._currentWeight.set(Math.max(0, baseWeight + variation));\n        this._isWeightStable.set(Math.random() > 0.3);\n      }, 500);\n    }, 2000);\n  }\n\n  /**\n   * Start picking an item\n   */\n  startPickingItem(item: PickingItem): void {\n    // Update item status\n    const items = this.pickingItems();\n    const itemIndex = items.findIndex(i => i.id === item.id);\n    if (itemIndex >= 0) {\n      items[itemIndex].status = 'PICKING';\n      this._currentPickingItemId.set(item.id);\n\n      // Update the run\n      const run = this._currentRun();\n      if (run) {\n        this._currentRun.set({ ...run, items: [...items] });\n      }\n    }\n  }\n\n  /**\n   * Confirm weight for current item\n   */\n  confirmWeight(): void {\n    const currentItem = this.currentPickingItem();\n    if (!currentItem) return;\n\n    const weight = this._currentWeight();\n    const items = this.pickingItems();\n    const itemIndex = items.findIndex(i => i.id === currentItem.id);\n\n    if (itemIndex >= 0) {\n      items[itemIndex].actualWeight = weight;\n      items[itemIndex].lotNumber = this.lotNumberInput || undefined;\n\n      // Check tolerance\n      const withinTolerance = weight >= currentItem.tolerance.min && weight <= currentItem.tolerance.max;\n      items[itemIndex].status = withinTolerance ? 'COMPLETED' : 'OVER_TOLERANCE';\n\n      // Clear current picking item\n      this._currentPickingItemId.set(null);\n      this.lotNumberInput = '';\n\n      // Update the run\n      const run = this._currentRun();\n      if (run) {\n        this._currentRun.set({ ...run, items: [...items] });\n      }\n    }\n  }\n\n  /**\n   * Skip current item\n   */\n  skipCurrentItem(): void {\n    const currentItem = this.currentPickingItem();\n    if (!currentItem) return;\n\n    const items = this.pickingItems();\n    const itemIndex = items.findIndex(i => i.id === currentItem.id);\n\n    if (itemIndex >= 0) {\n      items[itemIndex].status = 'PENDING';\n      this._currentPickingItemId.set(null);\n      this.lotNumberInput = '';\n\n      const run = this._currentRun();\n      if (run) {\n        this._currentRun.set({ ...run, items: [...items] });\n      }\n    }\n  }\n\n  /**\n   * Can confirm weight\n   */\n  canConfirmWeight(): boolean {\n    return this.currentPickingItem() !== null &&\n           this._isWeightStable() &&\n           this._connectionStatus() === 'connected';\n  }\n\n  /**\n   * Tare scale\n   */\n  tareScale(): void {\n    this._isScaleOperationInProgress.set(true);\n\n    // Mock operation\n    setTimeout(() => {\n      this._currentWeight.set(0);\n      this._isScaleOperationInProgress.set(false);\n    }, 1500);\n  }\n\n  /**\n   * Calibrate scale\n   */\n  calibrateScale(): void {\n    this._isScaleOperationInProgress.set(true);\n\n    // Mock operation\n    setTimeout(() => {\n      this._isScaleOperationInProgress.set(false);\n    }, 3000);\n  }\n\n  /**\n   * Toggle recording\n   */\n  toggleRecording(): void {\n    this._isRecording.set(!this._isRecording());\n  }\n\n  /**\n   * Go back to picking list\n   */\n  goBack(): void {\n    this.router.navigate(['/picking']);\n  }\n\n  /**\n   * Edit item\n   */\n  editItem(item: PickingItem): void {\n    this.startPickingItem(item);\n  }\n\n  /**\n   * Print labels\n   */\n  printLabels(): void {\n    console.log('Printing labels for completed items...');\n    // Implement label printing logic\n  }\n\n  /**\n   * Finalize run\n   */\n  finalizeRun(): void {\n    console.log('Finalizing picking run...');\n    // Implement run finalization logic\n    this.router.navigate(['/picking']);\n  }\n\n  // Helper methods\n  formatWeight(weight: number): string {\n    return `${weight.toFixed(2)} kg`;\n  }\n\n  getConnectionStatusText(): string {\n    const statusMap = {\n      'connected': 'Scale Connected',\n      'disconnected': 'Scale Disconnected',\n      'connecting': 'Connecting...'\n    };\n    return statusMap[this._connectionStatus()];\n  }\n\n  getConnectionStatusClass(): string {\n    const classMap = {\n      'connected': 'nwfth-status-connected',\n      'disconnected': 'nwfth-status-disconnected',\n      'connecting': 'nwfth-status-connecting'\n    };\n    return classMap[this._connectionStatus()];\n  }\n\n  getConnectionIndicatorClass(): string {\n    const classMap = {\n      'connected': 'nwfth-indicator-connected',\n      'disconnected': 'nwfth-indicator-disconnected',\n      'connecting': 'nwfth-indicator-connecting animate-pulse'\n    };\n    return classMap[this._connectionStatus()];\n  }\n\n  getItemRowClass(item: PickingItem): string {\n    const classMap = {\n      'PENDING': 'item-pending',\n      'PICKING': 'item-picking',\n      'COMPLETED': 'item-completed',\n      'OVER_TOLERANCE': 'item-over-tolerance'\n    };\n    return classMap[item.status] || 'item-pending';\n  }\n\n  getStatusClass(status: string): string {\n    const statusClasses: { [key: string]: string } = {\n      'PENDING': 'px-2 py-1 rounded-full text-xs bg-gray-100 text-gray-800',\n      'PICKING': 'px-2 py-1 rounded-full text-xs bg-blue-100 text-blue-800',\n      'COMPLETED': 'px-2 py-1 rounded-full text-xs bg-green-100 text-green-800',\n      'OVER_TOLERANCE': 'px-2 py-1 rounded-full text-xs bg-red-100 text-red-800'\n    };\n    return statusClasses[status] || 'px-2 py-1 rounded-full text-xs bg-gray-100 text-gray-800';\n  }\n\n  getStatusDisplayName(status: string): string {\n    const statusMap: { [key: string]: string } = {\n      'PENDING': 'Pending',\n      'PICKING': 'Picking',\n      'COMPLETED': 'Completed',\n      'OVER_TOLERANCE': 'Over Tolerance'\n    };\n    return statusMap[status] || status;\n  }\n\n  getTolerancePercentage(): number {\n    const item = this.currentPickingItem();\n    if (!item) return 0;\n\n    const weight = this._currentWeight();\n    const range = item.tolerance.max - item.tolerance.min;\n    const position = Math.max(0, Math.min(weight - item.tolerance.min, range));\n\n    return (position / range) * 100;\n  }\n\n  getToleranceBarClass(): string {\n    const item = this.currentPickingItem();\n    if (!item) return 'bg-gray-300';\n\n    const weight = this._currentWeight();\n\n    if (weight >= item.tolerance.min && weight <= item.tolerance.max) {\n      return 'bg-green-500';\n    } else if (weight < item.tolerance.min) {\n      return 'bg-yellow-500';\n    } else {\n      return 'bg-red-500';\n    }\n  }\n}"],"names":["signal","computed","CommonModule","FormsModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","formatWeight","currentPickingItem","tolerance","min","targetWeight","max","ɵɵclassMap","getToleranceBarClass","ɵɵstyleProp","getTolerancePercentage","ɵɵtwoWayListener","PickingInterfaceComponent_div_45_Template_input_ngModelChange_25_listener","$event","ɵɵrestoreView","_r2","ɵɵnextContext","ɵɵtwoWayBindingSet","lotNumberInput","ɵɵresetView","ɵɵlistener","PickingInterfaceComponent_div_45_Template_button_click_27_listener","skipCurrentItem","PickingInterfaceComponent_div_45_Template_button_click_29_listener","confirmWeight","ɵɵtextInterpolate","itemCode","itemName","ɵɵtwoWayProperty","ɵɵproperty","canConfirmWeight","PickingInterfaceComponent_div_50_button_21_Template_button_click_0_listener","_r3","item_r4","$implicit","startPickingItem","PickingInterfaceComponent_div_50_button_22_Template_button_click_0_listener","_r5","editItem","ɵɵtemplate","PickingInterfaceComponent_div_50_button_21_Template","PickingInterfaceComponent_div_50_button_22_Template","getItemRowClass","actualWeight","getStatusClass","status","getStatusDisplayName","PickingInterfaceComponent_div_51_Template_button_click_9_listener","_r6","printLabels","PickingInterfaceComponent_div_51_Template_button_click_11_listener","finalizeRun","PickingInterfaceComponent","constructor","route","router","runId","_isLoading","ngDevMode","debugName","_currentRun","_currentWeight","_isWeightStable","_isRecording","_connectionStatus","_currentPickingItemId","_isScaleOperationInProgress","isLoading","asReadonly","currentRun","currentWeight","isWeightStable","isRecording","connectionStatus","isScaleOperationInProgress","pickingItems","items","totalItems","length","completedItems","filter","item","progressPercentage","find","id","isRunCompleted","ngOnInit","snapshot","paramMap","get","loadPickingRun","connectToWeightScale","ngOnDestroy","weightSocket","close","set","setTimeout","mockRun","runNo","padStart","description","unit","location","setInterval","baseWeight","variation","Math","random","itemIndex","findIndex","i","run","currentItem","weight","lotNumber","undefined","withinTolerance","tareScale","calibrateScale","toggleRecording","goBack","navigate","console","log","toFixed","getConnectionStatusText","statusMap","getConnectionStatusClass","classMap","getConnectionIndicatorClass","statusClasses","range","position","_","_staticBlock","ɵɵdirectiveInject","i1","ActivatedRoute","Router","selectors","decls","vars","consts","template","PickingInterfaceComponent_Template","rf","ctx","PickingInterfaceComponent_Template_button_click_14_listener","PickingInterfaceComponent_div_34_Template","PickingInterfaceComponent_Template_button_click_39_listener","PickingInterfaceComponent_Template_button_click_41_listener","PickingInterfaceComponent_Template_button_click_43_listener","PickingInterfaceComponent_div_45_Template","PickingInterfaceComponent_div_50_Template","PickingInterfaceComponent_div_51_Template","tmp_0_0","tmp_1_0","ɵɵtextInterpolate2","i2","NgForOf","NgIf","i3","DefaultValueAccessor","NgControlStatus","NgModel","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}